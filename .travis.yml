# Based on siplasplas Travis config:
# https://github.com/Manu343726/siplasplas/blob/master/.travis.yml

language: cpp
os: linux
addons:
  apt:
    packages:
      - clang-3.7
      - g++-5 # We need an updated stdlibc++ for clang too
      - gcc-5
      - libboost1.55-all-dev # For Standardese
      - valgrind
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.7
      - boost-latest

env:
  global:
    - BUILD_TYPE=Release
    - CLANG_VERSION="3.7"
    - GITHUB_USER="Manu343726"
    - secure: "Xdoi99XRR9w75TVC/V+Py1elAIUUsDbFkBmDtOs8RvACpGj9yP433hrSmrY7+0ihsXHe5RZHmguf99PxK1jmEj8ug6IV5EfnJaNwf/1GZghj3l8fmGi2qMjETPvqehl00TWnQ9c4eTMIifiu84ZyzZhuIKAVcbB22RTfQUT46ePlTtV/ML1J6yL+ccXvdwclKmLunsWF1PjxXbCCsvU8CTPkdtz1zXydVbkWoMgmqOan95eLAFCunsjrJd3M8omDNxkBfPYqbavD1TAaAfFgmplWyLQO2rPgKQfsJBLbnT8/peeRejriuhThmKS8wLZAXlgDRRwB0nIgH9NwIw3ZCdQjg9+rBaGkvb9WJgjSCqVWtK/caZS95C/8adN1EJYiZwM7p8/8mtTTRfhOJfBjp6Smc2kJdjzvouwqP7Gg3IdAZtRsX/BHcmMSSsp4m2i0Q172KphBeV+qVUzGBu2rUKDNQkXOUr4BRMxwyuFyGfZvMFr+f+XbqdkFZ167XKTulIk4o3tTr5VNv7UMLCpCWnmNhDFKTxoJFtyL7MUydx/vxWs7BBsB6b8AqK//s1itk2SJ5Q/HzczroTqK4bXINqn/a+Ft/RNlTEzLayKeafTju6c7Qt0dy5EYL9HdFacwHADO9FLGGwyyW9/NMk3+TwQlh7j2aoQjWOaOZhpitBA="

matrix:
  include:
    # Unit tests:
    - env: PERF_TEST=""                   # unit tests, clang
    - env: PERF_TEST="" GCC_VERSION=5.2.1 # unit tests, gcc
    # Perf tests:
    - env: PERF_TEST="insert_base"                          # insert_base,       clang
    - env: PERF_TEST="insert_base"       GCC_VERSION=5.2.1  # insert_base,       gcc
    - env: PERF_TEST="for_each_base"                        # for_each_base,     clang
    - env: PERF_TEST="for_each_base"     GCC_VERSION=5.2.1  # for_each_base,     gcc
    - env: PERF_TEST="insert_function"                      # insert_function,   clang
    - env: PERF_TEST="insert_function"   GCC_VERSION=5.2.1  # insert_function,   gcc
    - env: PERF_TEST="for_each_function"                    # for_each_function, clang
    - env: PERF_TEST="for_each_function" GCC_VERSION=5.2.1  # for_each_function, gcc
    - env: PERF_TEST="insert_any"                           # insert_any,        clang
    - env: PERF_TEST="insert_any"        GCC_VERSION=5.2.1  # insert_any,        gcc
    - env: PERF_TEST="for_each_any"                         # for_each_any,      clang
    - env: PERF_TEST="for_each_any"      GCC_VERSION=5.2.1  # for_each_any,      gcc

before_install:
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-5" CC="gcc-5" COMPILER_NAME="gcc" COMPILER_VERSION="$GCC_VERSION"; fi
  - if [ -z "$GCC_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}" COMPILER_NAME="clang" COMPILER_VERSION="$CLANG_VERSION"; fi
  - which $CXX
  - which $CC
  - $CXX --version
  - $CC --version
  - if [ -z "$GCC_VERSION" ]; then which clang++ || true; fi

install:

# From Louis Dionne's Boost.Hana .travis.yml

############################################################################
# All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

############################################################################
# Install a recent CMake
############################################################################
  - CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
  - mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  - export PATH=${DEPS_DIR}/cmake/bin:${PATH}

  - cmake --version

  # Finished building deps
  - cd ${TRAVIS_BUILD_DIR}

  # Configure and build project:
  - if [ ! -d build ]; then mkdir build; fi
  - cd build

  - if [ -n "$PERF_TEST" ]; then export BOOST_POLYCOLLECTION_PERF_ONLY=ON; else export BOOST_POLYCOLLECTION_PERF_ONLY=OFF; fi
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE
              -DBOOST_POLYCOLLECTION_PERF_ONLY="$BOOST_POLYCOLLECTION_PERF_ONLY"
              -DBOOST_POLYCOLLECTION_PERF_TESTS="$PERF_TEST"
  - cmake --build .

script:
  - if [ -n "$PERF_TEST" ]; then make run_perf | tee perf_${PERF_TEST}.txt; fi
  - if [ -z "$PERF_TEST" ]; then make run_test_all; fi

after_success:
  - if [ -n "$PERF_TEST" ]; then git clone https://${GITHUB_USER}:${GITHUB_USER_TOKEN}@github.com/Manu343726/Boost.Polycollection.Perf perf && cd perf; fi

  - if [ -n "$PERF_TEST" -a ! -d "./${TRAVIS_OS_NAME}"]; mkdir "./${TRAVIS_OS_NAME}"; fi
  - if [ -n "$PERF_TEST" ]; then cd "./${TRAVIS_OS_NAME}"; fi
  - if [ -n "$PERF_TEST" -a ! -d "./${COMPILER_NAME}" ]; then mkdir "./${COMPILER_NAME}"; fi
  - if [ -n "$PERF_TEST" ]; then cd "./${COMPILER_NAME}"; fi
  - if [ -n "$PERF_TEST" -a ! -d "./${COMPILER_VERSION}" ]; then mkdir "./${COMPILER_VERSION}"; fi
  - if [ -n "$PERF_TEST" ]; then cd "./${COMPILER_VERSION}"; fi

  - if [ -n "$PERF_TEST" -a ! -d "./${TRAVIS_COMMIT}-${TRAVIS_BUILD_NUMBER}" ]; then mkdir "./${TRAVIS_COMMIT}-${TRAVIS_BUILD_NUMBER}"; fi
  - if [ -n "$PERF_TEST" ]; then cd "./${TRAVIS_COMMIT}-${TRAVIS_BUILD_NUMBER}"; fi
  - if [ -n "$PERF_TEST" ]; then cp ${TRAVIS_BUILD_DIR}/build/perf_${PERF_TEST}.txt .; fi

  - if [ -n "$PERF_TEST" ]; then git add --all && git commit -m "${PERF_TEST} results of commit '${TRAVIS_COMMIT}', build ${TRAVIS_BUILD_NUMBER}"; fi
  - if [ -n "$PERF_TEST" ]; then git push origin master --quiet; fi
